<template>
	<view class="container">
		<gcanvas ref="gcanvess" class="canvas"></gcanvas>
		<view class="btn">
			<text class="btn-text" @click="handleDraw">开始动画</text>
		</view>
	</view>

</template>

<script>
	import {
		enable,
		WeexBridge
	} from '../../gcanvas/index.js';

	module.exports = {
		onShow: function(e) {

		},
		data: {},
		methods: {
			handleDraw() {
				/*获取元素引用*/
				var ganvas = this.$refs["gcanvess"];
				/*通过元素引用获取canvas对象*/
				this.canvasObj = enable(ganvas, {
					bridge: WeexBridge
				});
				//var ctx = gcanvas.getContext("2d");
				/*获取绘图所需的上下文，目前不支持3d*/
				this.context = this.canvasObj.getContext('2d');
				console.log("handleViewappear--end" + typeof(ctx));
				this.position = {
					x: 150,
					y: 150,
					vx: 2,
					vy: 2
				}

				this.drawBall()
				this.interval = setInterval(this.drawBall, 10)
			},
			drawBall() {
				const p = this.position
				p.x += p.vx
				p.y += p.vy
				if (p.x >= 300) {
					p.vx = -2
				}
				if (p.x <= 7) {
					p.vx = 2
				}
				if (p.y >= 300) {
					p.vy = -2
				}
				if (p.y <= 7) {
					p.vy = 2
				}

				const context = this.context;

				function ball(x, y) {
					context.beginPath(0)
					context.arc(x, y, 5, 0, Math.PI * 2)
					context.setFillStyle('#1aad19')
					context.setStrokeStyle('rgba(1,1,1,0)')
					context.fill()
					context.stroke()
				}

				ball(p.x, 150)
				ball(150, p.y)
				ball(300 - p.x, 150)
				ball(150, 300 - p.y)
				ball(p.x, p.y)
				ball(300 - p.x, 300 - p.y)
				ball(p.x, 300 - p.y)
				ball(300 - p.x, p.y)

				context.draw()
			}
		}
	}
</script>

<style>
	.canvas {
		width: 605upx;
		height: 400upx;
		background-color: #fff;
	}

	.btn-text:active {
		background-color: #0f0;
	}

	.btn-text {
		padding-top: 20px;
		padding-bottom: 20px;
		margin-left: 20px;
		margin-right: 20px;
		flex-direction: row;
		background-color: #ff9537;

		border-radius: 10px;
		width: 335px;
		text-align: center;
		color: #fff;
	}

	/* page */
	.container {
		flex-direction: column;
	}
</style>
